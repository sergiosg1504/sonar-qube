services:
  # jenkins:
  #   image: jenkins/jenkins:lts
  #   container_name: jenkins
  #   ports:
  #     - ${JENKINS_HOST_PORT}:${JENKINS_DOCKER_PORT}
  #     - ${JENKINS_HOST_AGENT_PORT}:${JENKINS_DOCKER_AGENT_PORT}
  #   environment:
  #     - JENKINS_ADMIN_ID=${JENKINS_ADMIN_ID}
  #     - JENKINS_ADMIN_PASSWORD=${JENKINS_ADMIN_PASSWORD}
  #   volumes:
  #     - ./logs/jenkins:/var/log/jenkins
  #     - jenkins_home:/var/jenkins_home
  #   depends_on:
  #     - sonarqube
  #   networks:
  #     - sonarnet

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - ${SONARQUBE_HOST_PORT}:${SONARQUBE_DOCKER_PORT}
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:${POSTGRES_DOCKER_PORT}/${POSTGRES_DB}
      - SONARQUBE_JDBC_USERNAME=${SONARQUBE_DB_USER}
      - SONARQUBE_JDBC_PASSWORD=${SONARQUBE_DB_PASSWORD}
      - SONARQUBE_ADMIN_USER=${SONARQUBE_ADMIN_USER}
      - SONARQUBE_ADMIN_PASSWORD=${SONARQUBE_ADMIN_PASSWORD}
      - SONARQUBE_USER=${SONARQUBE_USER}
      - SONARQUBE_PASSWORD=${SONARQUBE_PASSWORD}
    volumes:
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_scripts:/tmp/scripts

    depends_on:
      - postgres
    networks:
      - sonarnet
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./docker/config/postgres/conf.conf:/var/lib/postgresql/data/postgresql.conf
      - postgres_logs:/var/log/postgresql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_HOST_PORT}:${POSTGRES_DOCKER_PORT}
    networks:
      - sonarnet
    restart: always

networks:
  sonarnet:
    driver: bridge

volumes:
  jenkins_home:

  sonarqube_data:
    driver: local
    driver_opts:
      type: none
      device: ./docker/data/sonarqube/data
      o: bind
  sonarqube_extensions:
    driver: local
    driver_opts:
      type: none
      device: ./docker/data/sonarqube/extensions
      o: bind
  sonarqube_logs:
    driver: local
    driver_opts:
      type: none
      device: ./docker/logs/sonarqube
      o: bind
  sonarqube_scripts:
    driver: local
    driver_opts:
      type: none
      device: ./docker/config/sonarqube/scripts
      o: bind

  postgres_logs:
    driver: local
    driver_opts:
      type: none
      device: ./docker/logs/postgres
      o: bind

  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: ./docker/data/postgres
      o: bind
